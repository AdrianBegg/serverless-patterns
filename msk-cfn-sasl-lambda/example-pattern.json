{
  "title": "Cloudformation template to deploy serverless or provisioned MSK Cluster and SAM project with Lambda function to demonstrate SASL authentication",
  "description": "Create a Lambda function that uses an Amazon MSK Topic as an event source.",
  "language": "Node.js",
  "level": "200",
  "framework": "SAM",
  "introBox": {
    "headline": "How it works",
    "text": [
      "This pattern provides two resources - ",
      " - A CloudFormation template that can be used to deploy serverless or provisioned MSK cluster and Cloud9 instance in the same VPC to interact with the MSK cluster",
      " - A SAM project with a Lambda Function to demonstrate SASL authentication.",
      "To test this pattern, first deploy the CloudFormation stack using the template file MSKSampleStack.yml under msk-cfn-sasl-lambda/create-cluster-cfn. You will need to chose if you'd like to provision serverless or provisioned cluster. For both options, all available authentication mechanisms are enabled - TLS, SASL/SCRAM, and IAM for provisioned cluster, and IAM for serverless. Follow msk-cfn-sasl-lambda/create-cluster-cfn/README.md for detailed instructions",
      "Next step is to deploy the Lambda Function. Follow steps under msk-cfn-sasl-lambda/README.md to deploy and test the Lambda Function.",
      "Note - Presently MSK with serverless is not supported for SASL authentication, you must use Provisioned option when deplying the MSK cluster." 
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/sfn-athena-cdk-python",
      "templateURL": "serverless-patterns/sfn-athena-cdk-python",
      "projectFolder": "sfn-athena-cdk-python",
      "templateFile": "sfn_athena_cdk_python/sfn_athena_cdk_python_stack.py"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "Call Athena with Step Functions",
        "link": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html"
      },
      {
        "text": "Amazon Athena - Serverless Interactive Query Service",
        "link": "https://aws.amazon.com/athena/"
      }
    ]
  },
  "deploy": {
    "text": [
      "sam deploy"
    ]
  },
  "testing": {
    "text": [
      "See the Github repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "Delete the stack: <code>cdk delete</code>."
    ]
  },
  "authors": [
    {
      "name": "Your name",
      "image": "link-to-your-photo.jpg",
      "bio": "Your bio.",
      "linkedin": "linked-in-ID",
      "twitter": "twitter-handle"
    }
  ]
}
