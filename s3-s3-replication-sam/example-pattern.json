{
  "title": "AWS S3 bucket replication",
  "description": "This pattern sets up replication between S3 buckets.",
  "language": "Python",
  "level": "200",
  "framework": "SAM",
  "introBox": {
    "headline": "How it works",
    "text": [
      "Data Redundancy and Durability: Safeguard against data loss with automatic and asynchronous replication of objects between S3 buckets.",
      "Disaster Recovery: Establish a robust disaster recovery strategy by replicating data to different regions or accounts.",
      "Global Content Distribution: Reduce latency and enhance user experience by replicating frequently accessed data to various geographical locations.",
      "Compliance and Data Retention: Address regulatory standards and compliance requirements by replicating data to separate accounts or regions.",
      "Operational Efficiency: Asynchronous replication allows you to focus on other tasks while data is efficiently copied in the background.",
      "Cross-Region Replication (CRR): Achieve low-latency access for users in different AWS regions by replicating data across regions.",
      "Same-Region Replication (SRR): Ensure redundancy, compliance, or operational efficiency by copying data to a separate bucket within the same region.",
      "Cross-Account Replication: Securely share data across AWS accounts by replicating objects to a destination bucket in a different account.",
      "Granular Control: Configure replication rules at the bucket level for precise control over which objects to replicate and where.",
      "Flexible Implementation: Leverage native S3 replication features to configure replication behavior through JSON-based, structured language."
    ]
    
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/s3-s3-replication-sam",
      "templateURL": "serverless-patterns/s3-s3-replication-sam",
      "projectFolder": "s3-s3-replication-sam",
      "templateFile": "s3-s3-replication-sam.py"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "Call Athena with Step Functions",
        "link": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html"
      },
      {
        "text": "Amazon Athena - Serverless Interactive Query Service",
        "link": "https://aws.amazon.com/athena/"
      }
    ]
  },
  "deploy": {
    "text": [
      "sam deploy"
    ]
  },
  "testing": {
    "text": [
      "See the GitHub repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "<code>sam delete</code>"
    ]
  },
  "authors": [
    {
      "name": "Jorge Tovar",
      "image": "https://avatars.githubusercontent.com/u/21094604?v=4",
      "bio": "Software Architect, passionate about serverless technologies and cloud computing.",
      "linkedin": "www.linkedin.com/in/jorgetovar-sa",
      "twitter": "https://twitter.com/jorgetovar621"
    }
  ]
}
