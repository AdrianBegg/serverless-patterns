{
  "title": "GenAI conversation summarization using Amazon S3, Amazon SQS, AWS Lambda, and Amazon Bedrock",
  "description": "Summarize a conversation transcription using Amazon S3 events, Amazon SQS, AWS Lambda and Amazon Bedrock. Ideal for conversation summaries.",
  "language": "Python",
  "level": "200",
  "framework": "CDK",
  "introBox": {
    "headline": "How it works",
    "text": [
      "This pattern creates an Amazon S3 bucket that sends 'OBJECT_CREATED' events to an SQS queue.",
      "An AWS Lambda function receives the messages from the queue and invokes Amazon Bedrock to extract a summary and sentiment from the file.",
      "The result is stored in a different S3 bucket for consumption.",
      "This setup is particularly useful for obtaining a summary of conversations between customers and support associates."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/s3-sqs-lambda-bedrock-s3-cdk-python",
      "templateURL": "serverless-patterns/s3-sqs-lambda-bedrock-s3-cdk-python",
      "projectFolder": "s3-sqs-lambda-bedrock-s3-cdk-python",
      "templateFile": "s3_sqs_lambda_bedrock_s3_cdk_python/s3_sqs_lambda_bedrock_s3_cdk_python_stack.py"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "Getting started with the AWS CDK",
        "link": "https://docs.aws.amazon.com/cdk/v2/guide/getting_started.html"
      },
      {
        "text": "Using an amazon S3 trigger to invoke a Lambda function",
        "link": "https://docs.aws.amazon.com/lambda/latest/dg/with-s3-example.html"
      },
      {
        "text": "Amazon Bedrock: Text summarization",
        "link": "https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-tasks-text-summary.html"
      },
      {
        "text": "Create summaries of recordings using generative AI with Amazon Bedrock and Amazon Transcribe",
        "link": "https://aws.amazon.com/blogs/machine-learning/create-summaries-of-recordings-using-generative-ai-with-amazon-bedrock-and-amazon-transcribe/"
      }
    ]
  },
  "deploy": {
    "text": [
      "cdk deploy"
    ]
  },
  "testing": {
    "text": [
      "See the GitHub repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "Delete the stack: <code>cdk destroy</code>."
    ]
  },
  "authors": [
    {
      "name": "Dinesh Balaaji Prabakaran",
      "image": "https://avatars.githubusercontent.com/u/43818089?s=400&u=8a1e4fabab318016c485049108a2012b760e9ff7&v=4",
      "bio": "I am a Senior Technical Account Manager with AWS. I specialize in architecting and developing serverless, event-driven solutions on AWS. AWS Storage Technical Field Community member.",
      "linkedin": "pdineshbalaaji"
    }
  ],
  "patternArch": {
    "icon1": {
      "x": 7,
      "y": 50,
      "service": "s3",
      "label": "Amazon S3"
    },
    "icon2": {
      "x": 30,
      "y": 50,
      "service": "sqs",
      "label": "Amazon SQS"
    },
    "icon3": {
      "x": 50,
      "y": 50,
      "service": "lambda",
      "label": "AWS Lambda"
    },
    "icon4": {
      "x": 70,
      "y": 50,
      "service": "bedrock",
      "label": "Amazon Bedrock"
    },
    "icon5": {
      "x": 90,
      "y": 50,
      "service": "s3",
      "label": "Amazon S3"
    },
    "line1": {
      "from": "icon1",
      "to": "icon2"
    },
    "line2": {
      "from": "icon2",
      "to": "icon3"
    },
    "line3": {
      "from": "icon3",
      "to": "icon4"
    },
    "line4": {
      "from": "icon4",
      "to": "icon5"
    }
  }
}
